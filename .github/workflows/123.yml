name: Build [A]

on:
  workflow_dispatch:
    inputs:
      version:
        description: "ImmortalWrt release version (e.g., 24.10.2)"
        required: true
        default: "24.10.2"
      target:
        description: "Target (e.g., x86)"
        required: true
        default: "x86"
      subtarget:
        description: "Subtarget (e.g., 64)"
        required: true
        default: "64"
      profile:
        description: "Profile/device (e.g., generic)"
        required: true
        default: "generic"
      packages:
        description: "Additional packages (space-separated)"
        required: false
        default: "luci openssh-sftp-server"
      extra_image_name:
        description: "Extra image name suffix (for identification)"
        required: false
        default: "gh-build"

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      VERSION: ${{ github.event.inputs.version }}
      TARGET: ${{ github.event.inputs.target }}
      SUBTARGET: ${{ github.event.inputs.subtarget }}
      PROFILE: ${{ github.event.inputs.profile }}
      PACKAGES: ${{ github.event.inputs.packages }}
      EXTRA_IMAGE_NAME: ${{ github.event.inputs.extra_image_name }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Prepare environment
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends \
            build-essential \
            ca-certificates \
            curl \
            xz-utils \
            unzip \
            file \
            rsync

      - name: Compute ImageBuilder URL
        id: ib
        run: |
          # Compose the ImageBuilder archive name as used by ImmortalWrt
          # Example:
          # https://downloads.immortalwrt.org/releases/24.10.2/targets/x86/64/immortalwrt-imagebuilder-24.10.2-x86-64.Linux-x86_64.tar.zst
          IB_NAME="immortalwrt-imagebuilder-${VERSION}-${TARGET}-${SUBTARGET}.Linux-x86_64"
          IB_URL="https://downloads.immortalwrt.org/releases/${VERSION}/targets/${TARGET}/${SUBTARGET}/${IB_NAME}.tar.xz"
          echo "name=${IB_NAME}" >> $GITHUB_OUTPUT
          echo "url=${IB_URL}" >> $GITHUB_OUTPUT

      - name: Cache downloads (dl)
        uses: actions/cache@v4
        with:
          path: ${{ steps.ib.outputs.name }}/dl
          key: ib-dl-${{ env.VERSION }}-${{ env.TARGET }}-${{ env.SUBTARGET }}

      - name: Download ImageBuilder
        run: |
          curl -fL --retry 5 -o ${IB_TAR:=${{ steps.ib.outputs.name }}.tar.xz} "${{ steps.ib.outputs.url }}"
          mkdir -p imagebuilder
          tar -C imagebuilder -xJf "${IB_TAR}"
          echo "IB_DIR=imagebuilder/${{ steps.ib.outputs.name }}" >> $GITHUB_ENV

      - name: (Optional) provide files/ overlay
        run: |
          # If you have a files/ directory in your repo, copy it in to customize /etc/*, keys, etc.
          if [ -d files ]; then
            rsync -a files/ "${IB_DIR}/files/"
          fi

      - name: Show ImageBuilder info
        run: |
          make -C "${IB_DIR}" info || true
          echo "Packages to add: ${PACKAGES}"

      - name: Build image
        run: |
          # Build to a separate BIN_DIR for clarity
          OUT_DIR="${GITHUB_WORKSPACE}/out"
          mkdir -p "${OUT_DIR}"
          # EXTRA_IMAGE_NAME helps you identify builds in filenames
          make -C "${IB_DIR}" image \
            PROFILE="${PROFILE}" \
            PACKAGES="${PACKAGES}" \
            BIN_DIR="${OUT_DIR}" \
            EXTRA_IMAGE_NAME="${EXTRA_IMAGE_NAME}"
          # List results
          echo "Built artifacts:"
          find "${OUT_DIR}" -type f -maxdepth 2 -printf "%P\n"

      - name: Write SHA256SUMS
        run: |
          cd out
          # Generate sha256sums similar to the selectorâ€™s displayed checksums
          find . -type f -exec sha256sum "{}" \; | tee SHA256SUMS.txt

      - name: Upload all artifacts (raw)
        uses: actions/upload-artifact@v4
        with:
          name: immortalwrt-${{ env.VERSION }}-${{ env.TARGET }}-${{ env.SUBTARGET }}-${{ env.PROFILE }}-all
          path: |
            out/**
          if-no-files-found: error
          retention-days: 7

      - name: Upload user-friendly images
        uses: actions/upload-artifact@v4
        with:
          name: immortalwrt-${{ env.VERSION }}-${{ env.TARGET }}-${{ env.SUBTARGET }}-${{ env.PROFILE }}-common
          path: |
            out/**/*.img.gz
            out/**/*.iso
            out/**/*.qcow2
            out/**/*.vdi
            out/**/*.vhdx
            out/**/*.vmdk
            out/SHA256SUMS.txt
          if-no-files-found: warn
          retention-days: 7
